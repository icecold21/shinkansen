#!/usr/bin/env ruby

require 'rubygems'
require 'commander'
require 'json'
require 'pry'

class MyApplication
  include Commander::Methods
  # include whatever modules you need

  def run
    program :name, 'Shinkansen'
    program :version, '0.0.1'
    program :description, 'Bullet Train'
    program :help, 'Configuration', 'is located in .shinkansen/config.json'
    program :help, 'Author', 'Jonathan Wylliem <jonathan.wylliem@jurnal.id>'

    command :deploy do |c|
      c.syntax = 'shin deploy [options]'
      c.summary = 'deploy'
      c.description = 'Deploy using shinkansen'
      # c.example 'shin deploy', 'command example'
      # c.example 'shin deploy --skip-compilation', 'command example'
      # c.option '--some-switch', 'Some switch that does something'
      c.action do |args, options|
        # Do something or c.when_called Shinkansen::Commands::Deploy
      end
    end

    command :init do |c|
      c.syntax = 'shinkansen init'
      c.summary = 'initialize'
      c.description = 'Initialize shinkansen project'
      c.action do |args, options|
        initialize_project = true
        if Pathname.new('.shinkansen/config.json').exist?
          say "Shinkansen project existed in current directory..."
          initialize_project = agree("Do you want to override current setting? (yes, no)")
        end

        if initialize_project == true
          say "Initializing shinkansen project..."

          setting = Hash.new.tap do |h|
            h["application_name"]      = ask("Application Name:  ")
            h["application_directory"] = ask("Application Directory:  ")
          end

          %x(mkdir -p .shinkansen)
          %x(echo "#{setting.to_json}" > .shinkansen/config.json)
          say setting.inspect
        end
      end
    end

    run!
  end
end

MyApplication.new.run if $0 == __FILE__
